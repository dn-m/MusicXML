#if !canImport(ObjectiveC)
import XCTest

extension AccidentalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AccidentalTests = [
        ("testDecodingPlacement", testDecodingPlacement),
        ("testDecodingSimple", testDecodingSimple),
    ]
}

extension ArrowTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArrowTests = [
        ("testAPI", testAPI),
    ]
}

extension AttributesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributesTests = [
        ("testDecoding", testDecoding),
    ]
}

extension BackupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BackupTests = [
        ("testBackup", testBackup),
    ]
}

extension BarlineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BarlineTests = [
        ("testDecodingSimple", testDecodingSimple),
    ]
}

extension ClefTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClefTests = [
        ("testNoSign", testNoSign),
        ("testOctaveChange", testOctaveChange),
        ("testPercussion", testPercussion),
        ("testSimple", testSimple),
        ("testTAB", testTAB),
    ]
}

extension CreatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CreatorTests = [
        ("testCreatorRoundTrip", testCreatorRoundTrip),
    ]
}

extension HelloWorld {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HelloWorld = [
        ("testHelloWorldDecoding", testHelloWorldDecoding),
    ]
}

extension IdentificationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IdentificationTests = [
        ("testDecoding", testDecoding),
        ("testDecodingSimple", testDecodingSimple),
    ]
}

extension KeyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__KeyTests = [
        ("testDecodingTraditional", testDecodingTraditional),
    ]
}

extension LilyPondTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LilyPondTests = [
        ("testAll", testAll),
    ]
}

extension MeasureStyleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MeasureStyleTests = [
        ("testMultipleRest", testMultipleRest),
    ]
}

extension MiscellaneousTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MiscellaneousTests = [
        ("testDecoding", testDecoding),
        ("testMiscellaneousRoundTrip", testMiscellaneousRoundTrip),
    ]
}

extension MusicDataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MusicDataTests = [
        ("testDecodingAttributes", testDecodingAttributes),
        ("testDecodingDivisions", testDecodingDivisions),
    ]
}

extension NotationsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NotationsTests = [
        ("testAccidentalMark", testAccidentalMark),
        ("testAccidentalMarkNotation", testAccidentalMarkNotation),
        ("testFermata", testFermata),
        ("testFermataNoValue", testFermataNoValue),
        ("testMultipleArticulations", testMultipleArticulations),
        ("testNonArpeggiate", testNonArpeggiate),
        ("testTuplet", testTuplet),
        ("testTurn", testTurn),
    ]
}

extension NoteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NoteTests = [
        ("testNoteAccidentalDecoding", testNoteAccidentalDecoding),
        ("testNoteDecoding", testNoteDecoding),
        ("testTuplet", testTuplet),
    ]
}

extension PartListTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PartListTests = [
        ("testScorePartAndPartGroupDecoding", testScorePartAndPartGroupDecoding),
        ("testScorePartDecoding", testScorePartDecoding),
    ]
}

extension PartNameTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PartNameTests = [
        ("testDecoding", testDecoding),
    ]
}

extension PartwiseMeasureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PartwiseMeasureTests = [
        ("testDecodingAttributes", testDecodingAttributes),
        ("testDecodingEmpty", testDecodingEmpty),
        ("testDecodingNotes", testDecodingNotes),
    ]
}

extension PartwisePartTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PartwisePartTests = [
        ("testDecoding", testDecoding),
        ("testDecodingSingleMeasure", testDecodingSingleMeasure),
    ]
}

extension PitchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchTests = [
        ("testHighFQuarterSharpRoundTrip", testHighFQuarterSharpRoundTrip),
        ("testMiddleCRoundTrip", testMiddleCRoundTrip),
    ]
}

extension PitchUnpitchedRestTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchUnpitchedRestTests = [
        ("testPitch", testPitch),
        ("testRest", testRest),
        ("testUnpitched", testUnpitched),
    ]
}

extension RestTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RestTests = [
        ("testEmpty", testEmpty),
    ]
}

extension ScoreInstrumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScoreInstrumentTests = [
        ("testDecoding", testDecoding),
    ]
}

extension ScorePartTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScorePartTests = [
        ("testDecoding_complex", testDecoding_complex),
        ("testDecoding", testDecoding),
    ]
}

extension TimeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TimeTests = [
        ("testDecodingCommon", testDecodingCommon),
        ("testDecodingMeasured", testDecodingMeasured),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AccidentalTests.__allTests__AccidentalTests),
        testCase(ArrowTests.__allTests__ArrowTests),
        testCase(AttributesTests.__allTests__AttributesTests),
        testCase(BackupTests.__allTests__BackupTests),
        testCase(BarlineTests.__allTests__BarlineTests),
        testCase(ClefTests.__allTests__ClefTests),
        testCase(CreatorTests.__allTests__CreatorTests),
        testCase(HelloWorld.__allTests__HelloWorld),
        testCase(IdentificationTests.__allTests__IdentificationTests),
        testCase(KeyTests.__allTests__KeyTests),
        testCase(LilyPondTests.__allTests__LilyPondTests),
        testCase(MeasureStyleTests.__allTests__MeasureStyleTests),
        testCase(MiscellaneousTests.__allTests__MiscellaneousTests),
        testCase(MusicDataTests.__allTests__MusicDataTests),
        testCase(NotationsTests.__allTests__NotationsTests),
        testCase(NoteTests.__allTests__NoteTests),
        testCase(PartListTests.__allTests__PartListTests),
        testCase(PartNameTests.__allTests__PartNameTests),
        testCase(PartwiseMeasureTests.__allTests__PartwiseMeasureTests),
        testCase(PartwisePartTests.__allTests__PartwisePartTests),
        testCase(PitchTests.__allTests__PitchTests),
        testCase(PitchUnpitchedRestTests.__allTests__PitchUnpitchedRestTests),
        testCase(RestTests.__allTests__RestTests),
        testCase(ScoreInstrumentTests.__allTests__ScoreInstrumentTests),
        testCase(ScorePartTests.__allTests__ScorePartTests),
        testCase(TimeTests.__allTests__TimeTests),
    ]
}
#endif
